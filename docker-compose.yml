version: "3"
services:
  nginx:
    build:
      context: .
      dockerfile: ./docker/nginx/Dockerfile
    volumes:
      - ./docker/nginx/log:/var/log/nginx
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf
    environment:
      - "TZ=Japan"
    restart: always
    ports:
      - 80:80
      - 443:443
    links:
      - web
    tty: true

  web:
    build:
      context: .
      dockerfile: ./docker/web/Dockerfile
    volumes:
      - ./flask:/app
      - ./docker/web/guniconf.py:/etc/guni/guniconf.py  # いったん/etc以下にする
      - ./docker/web/log:/var/log/guni
    # ports:
    #   - 5000:5000 # 内部だけでいいのでホストOSには出さない
    links:
      - db
    tty: true

  db:
    build:
      context: .
      dockerfile: ./docker/rds/Dockerfile
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
      MYSQL_DATABASE: flask
      MYSQL_ROOT_HOST: "%"
      TZ: "Asia/Tokyo"
    command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin
    volumes:
      # - ./docker/rds/data:/var/lib/mysql
      - ./docker/rds/my.cnf:/etc/mysql/conf.d/my.cnf
      - ./docker/rds/sql:/docker-entrypoint-initdb.d
      - ./docker/rds/log:/var/log/mysql
    ports:
      - 3306:3306

  redis:
    build:
      context: .
      dockerfile: ./docker/redis/Dockerfile

  mailhog:
    image: mailhog/mailhog:latest
    ports:
      - "18025:8025"
